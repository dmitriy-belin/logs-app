## создать образ на основании Dockerfile в текущем каталоге без присвоения имени и версии
docker build .
## создать образ <name> c версией <version> на основании Dockerfile в текущем каталоге
## если не указать <version>, то будет присвоена версия latest
docker build -t <name>:<version> .
## содание и запуск контейнера в фоновом режиме на основе образа <image_name> с пробросом портов (80 в системе 3000 в контейнере)
docker run -d -p 80:3000 <image_name>
## содание и запуск контейнера в фоновом режиме на основе образа <image_name> с пробросом портов с указанием имени контейнера (80 в системе 3000 в контейнере)
docker run -d -p 80:3000 --name <container_name> <image_name>
	--rm ## автоматическое удаление контейнера после его остановки
	-e <var_name>=<var_value> ## передача параметров
	--env-file <param_file> ## передача параметров через файл
## отобразить список всех контейнеров
docker ps -a
## остановка контейнера <container_name>
docker stop <container_name>
## запуск контейнера <container_name>, запустится с учетом опций, которые были указаны при создании
docker start <container_name>
## удалить все контейнеры
docker container prune
## подключение к консоли контейнера запущенного в фоновом режиме
docker attach <container_id>
## просмотр логов консоли контейнера запущенного в фоновом режиме
docker logs <container_id>
## удаление образа
docker rmi <image>
##